generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model proyectos {
  id                       Int                @id @default(autoincrement())
  ceco_anterior            String?            @db.VarChar(100)
  id_sap                   String?            @db.VarChar(100)
  nombre                   String?            @db.VarChar(255)
  tipo_reconocimiento      String?            @db.VarChar(100)
  descripcion              String?            @db.Text
  cliente                  String?            @db.VarChar(255)
  sector                   String?            @db.VarChar(100)
  pais                     String?            @db.VarChar(100)
  empresa                  String?            @db.VarChar(150)
  agrupacion_n1            String?            @db.VarChar(100)
  agrupacion_n2            String?            @db.VarChar(100)
  bl                       String?            @db.VarChar(50)
  bu                       String?            @db.VarChar(50)
  ol                       String?            @db.VarChar(50)
  account_manager          String?            @db.VarChar(150)
  preventa                 String?            @db.VarChar(150)
  project_manager          String?            @db.VarChar(150)
  estado_ejecucion         String?            @db.VarChar(100)
  estado_sap               String?            @db.VarChar(100)
  fecha_cierre_financiera  DateTime?          @db.Date
  fecha_inicio_contractual DateTime?          @db.Date
  fecha_fin_contractual    DateTime?          @db.Date
  tcv                      Decimal?           @db.Decimal(18, 2)
  venta_revenue            Decimal?           @db.Decimal(18, 2)
  venta_cost               Decimal?           @db.Decimal(18, 2)
  venta_dm                 Decimal?           @db.Decimal(18, 2)
  es_renovacion            Boolean            @default(false)
  proyecto_origen_id       Int?
  notas_de_renovacion      String?            @db.Text
  version                  Int?               @default(1)
  persona_proyecto         persona_proyecto[]
  proyecto_origen          proyectos?         @relation("Renovaciones", fields: [proyecto_origen_id], references: [id])
  renovaciones             proyectos[]        @relation("Renovaciones")

  @@index([proyecto_origen_id], map: "proyectos_proyecto_origen_id_fkey")
}

model usuarios {
  id         Int          @id @default(autoincrement())
  nombre     String       @db.VarChar(100)
  correo     String       @unique(map: "correo") @db.VarChar(100)
  contrasena String       @db.VarChar(255)
  rol        usuarios_rol @default(consulta)
  creado_en  DateTime?    @default(now()) @db.Timestamp(0)
}

model personas {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(150)
  correo    String?  @unique @db.VarChar(100)
  document  String?  @unique @db.VarChar(50)
  empresa   String?  @db.VarChar(100)
  telefono  String?  @db.VarChar(50)
  
  cargo_id  Int?
  cargo     cargos?  @relation(fields: [cargo_id], references: [id])
  
  proyectos persona_proyecto[]
}

model persona_proyecto {
  id          Int       @id @default(autoincrement())
  persona_id  Int
  proyecto_id Int
  rol         String    @db.VarChar(100)
  persona     personas  @relation(fields: [persona_id], references: [id], onDelete: Cascade)
  proyecto    proyectos @relation(fields: [proyecto_id], references: [id], onDelete: Cascade)

  @@unique([persona_id, proyecto_id], name: "persona_id_proyecto_id")
  @@index([persona_id])
  @@index([proyecto_id])
}

enum usuarios_rol {
  admin
  gestor
  consulta
}

model cargos {
  id        Int     @id
  name      String  @db.VarChar(255)
  personas  personas[]
}